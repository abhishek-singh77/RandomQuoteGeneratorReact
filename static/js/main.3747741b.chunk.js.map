{"version":3,"sources":["twitter.svg","instagram.svg","components/Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","useState","quote","setQuote","author","setAuthor","useEffect","getQuote","fetch","then","res","json","data","dataQuotes","quotes","randomQuote","Math","floor","random","length","id","className","href","src","twitterIcon","alt","instaIcon","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAAe,MAA0B,oCCA1B,MAA0B,sC,OCyD1BA,EApDA,WAEX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAW,WAGbC,MAFU,0IAGLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAIC,EAAaD,EAAKE,OAElBC,EAAcF,EADFG,KAAKC,MAAMD,KAAKE,SAAWL,EAAWM,SAEtDhB,EAASY,EAAYb,OACrBG,EAAUU,EAAYX,YASlC,OACI,sBAAKgB,GAAG,YAAR,UACI,qBAAKA,GAAG,OAAR,SACI,4BAAIlB,MAER,qBAAKkB,GAAG,SAAR,SAAiB,4BAAIhB,MAErB,sBAAKgB,GAAG,UAAR,UACI,sBAAKC,UAAU,eAAf,UACI,mBAAGC,KAAK,2BAA2BF,GAAG,cAAtC,SACI,iCAAM,qBAAKG,IAAMC,EAAaC,IAAI,KAAlC,UAEJ,mBAAGH,KAAK,IAAIF,GAAG,cAAf,SACI,iCAAM,qBAAKG,IAAMG,EAAWD,IAAI,KAAhC,aAGR,qBAAKL,GAAG,YAAR,SACA,wBAAQO,QArBA,WAChBpB,KAoBQ,gC,sBCpCDqB,MATf,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,QCGSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3747741b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter.5229b35a.svg\";","export default __webpack_public_path__ + \"static/media/instagram.62572c86.svg\";","import React, {useState, useEffect} from \"react\";\r\n\r\nimport twitterIcon from '../twitter.svg';\r\nimport instaIcon from '../instagram.svg';\r\n\r\nconst Quotes = () => {\r\n\r\n    const [quote, setQuote] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n\r\n    useEffect(() => {\r\n        getQuote()\r\n    }, [])\r\n\r\n    const getQuote = () => {\r\n        let url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\r\n\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let dataQuotes = data.quotes;\r\n                let randomNum = Math.floor(Math.random() * dataQuotes.length);\r\n                let randomQuote = dataQuotes[randomNum];\r\n                setQuote(randomQuote.quote);\r\n                setAuthor(randomQuote.author);\r\n\r\n            })\r\n\r\n    }\r\n    const handleClick = () => {\r\n        getQuote();\r\n    } \r\n\r\n    return (\r\n        <div id=\"quote-box\">\r\n            <div id=\"text\">\r\n                <p>{quote}</p>\r\n            </div>\r\n            <div id=\"author\"><p>{author}</p></div>\r\n\r\n            <div id=\"buttons\">\r\n                <div className=\"social-media\">\r\n                    <a href=\"twitter.com/intent/tweet\" id=\"tweet-quote\">\r\n                        <span><img src ={twitterIcon} alt=\"\"  />  </span>\r\n                    </a>\r\n                    <a href=\"#\" id=\"insta-quote\">\r\n                        <span><img src ={instaIcon} alt=\"\"  />  </span>\r\n                    </a>\r\n                </div>\r\n                <div id=\"new-quote\">\r\n                <button onClick={handleClick} >New Quote</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quotes;\r\n","import React from 'react';\nimport Quotes from './components/Quotes';\nimport ReactFCCtest from 'react-fcctest';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quotes  />\n      <ReactFCCtest />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}